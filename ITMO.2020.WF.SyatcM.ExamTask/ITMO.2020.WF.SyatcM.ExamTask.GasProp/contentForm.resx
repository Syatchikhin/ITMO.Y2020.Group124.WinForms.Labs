<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>1) Откройте файл-шаблон Excel с заполненным ранее составом газа.
     Воспользуйтесь иконкой:            или используйте команды меню: 
      Файл -&gt; Открыть.

2) Выберите команду           "Рассчитать".

3) Полученные разультаты выводятся на экран. Также  файл
   с результатами расчета можно сохранить под другим именем.
   Для этого воспользуйтесь командой         "Сохранить как.."

4) Очистить содержимое формы можно при помощи команды           
           "Очистить". 
   </value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAR9JREFUOE9j+P//Pwr+9u2bARB/AOIEdDlsGIUD05w96/D/E9ef/ifGEBQOUEMA
        EP/XLVz7ny92IVGGgDRNAGlCx8QaAjLg/46z98GKGYLnYGC59OUwQw1wGgDTDFUIxiAxED525f7/98+u
        o8hB8QS4ASDN1UtOwiWRnf/61oH/d7ZVoeBn51bA1CrAXQDTAOIjxcL/L5/egV2AjEGGgOTgLpix7TzY
        AGRX4MMYBtzf1wkWuP7oNYpCXBhmAAiDDYAJvLl3HMwmBt/b1YhpwKNjMzEU4sLQgFwAN+Dzu2cYivDh
        j6/ugwxwgBvw/NIGDEW48MNDE0GaH8AC8QNIAOQnbIqxYVBYAfUVwAxoAMb1R/S4xodBaQOoT+D///8M
        AGiHO8YZNN9bAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAGhJREFUOE9jQAZfvnwx+Pbt23sg/o8Hvwepg2pBBSDJtra2/05OTjgxSB6kDqoF
        FYBsACn68P4jTgySB6mDakEFyAbAbETG9DUAFybaAHz0qAvIdAHJBuCjyXIBDBMygLLMRHp2ZmAAAG69
        HMUsMXvnAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAANhJREFUOE9j+Pbt239yMBAwgDDYAIbgOSRhnAbATMeFh4ABhDBf7ML/1UtOwgy8
        AMQGRBsA0rx+97H/eXl5YDxnDtglC4gyAKbZ19f3f3JyMlizk5MTxFuEDEDXfPLkSTC7qqoKZMAGDANA
        fGR85coVDM0g9uvXr0HyDngNIKA5AR4LIGciG4DL2eiaYQYsOHH9KdwQkAExE/b9b21tJagZbACIABkC
        0oiMIyIiwBifZrgByBioyOD+/fvgaILFNy7NIIwhAFRYAHIBFB8A4gYgNkBXB8H/GQD/fd+qZG0UkQAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAATNJREFUOE+VkrFugzAQhvMIeZQ+AztSR8ZIzLUyNkxeWJKFodkYsrFGPADKypaB
        nc6QNGRhvd5/AuloTUWHX8b2/3++s1kR0b/U9/2adWER6+w0QYPxlWWHEXPomuc5eZ4HwGx4y+rKsqQ0
        TSnLMqrrGoHPMYyR5xdX+MSiIAjEqBVFkQ5fWWsdlN5wapIkYvoJgIwxCHfwIzeG0WOHcn3fp937juI4
        noUM7bwIgD8SLIBs3gzd2jt1jyft94dZCO6Ec3YESBg9I6g1B0GlGrBp25bCMJTAEkhRFABs9B0shqBS
        9k8vcQnEWiuvAw97pfwJ4C/I/fYla6iAPSedmQAgF+T4cZQWeE9+Hu2fhEdpCJ4WfTdN8+R1eXutyURL
        Q6qqwulbl+/XghYgLITPrn0iWn0Dapv2wrynxgkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AL9FA/+/RQP/v0UD/79FAwC/RQMAv0UD/79FA/+/RQP/v0UD/79FAwC/RQMAv0UD/79F
        A/+/RQP/////AP///wC/RQP/v0UD/79FA/+/RQMAv0UDAL9FA/+/RQP/v0UD/79FA/+/RQMAv0UDAL9F
        A/+/RQP/v0UD/////wD///8Av0UD/79FA/+/RQP/v0UDAL9FAwC/RQP/v0UD/79FA/+/RQP/v0UDAL9F
        AwC/RQP/v0UD/79FA/////8A////AL9FAwC/RQMAv0UDAL9FAwC/RQMAv0UD/79FA/+/RQP/v0UD/79F
        AwC/RQMAv0UDAL9FAwC/RQMA////AP///wC/RQMAv0UDAL9FAwC/RQMAv0UDAL9FA/+/RQP/v0UD/79F
        A/+/RQMAv0UDAL9FAwC/RQMAv0UDAP///wD///8Av0UD/79FA/+/RQP/v0UDAL9FAwC/RQP/v0UD/79F
        A/+/RQP/v0UDAL9FAwC/RQP/v0UD/79FA/////8A////AL9FA/+/RQP/v0UD/79FAwC/RQMAv0UD/79F
        A/+/RQP/v0UD/79FAwC/RQMAv0UD/79FA/+/RQP/////AP///wC/RQP/v0UD/79FA/+/RQMAv0UDAL9F
        A/+/RQP/v0UD/79FA/+/RQMAv0UDAL9FA/+/RQP/v0UD/////wD///8Av0UD/79FA/+/RQP/v0UDAL9F
        AwC/RQP/v0UD/79FA/+/RQP/v0UDAL9FAwC/RQP/v0UD/79FA/////8A////AL9FA/+/RQP/v0UD/79F
        AwC/RQMAv0UDAL9FAwC/RQMAv0UDAL9FAwC/RQMAv0UD/79FA/+/RQP/////AP///wC/RQP/v0UD/79F
        A/+/RQMAv0UDAL9FAwC/RQMAv0UDAL9FAwC/RQMAv0UDAL9FA/+/RQP/v0UD/////wD///8Av0UD/79F
        A/+/RQP/v0UDAL9FAwC/RQP/v0UD/79FA/+/RQP/v0UDAL9FAwC/RQP/v0UD/79FA/////8A////AL9F
        A/+/RQP/v0UD/79FAwC/RQMAv0UD/79FA/+/RQP/v0UD/79FAwC/RQMAv0UD/79FA/+/RQP/////AP//
        /wC/RQP/v0UD/79FA/+/RQMAv0UDAL9FA/+/RQP/v0UD/79FA/+/RQMAv0UDAL9FA/+/RQP/v0UD////
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A//8AAIwxAACMMQAAjDEAAPw/AAD8PwAAjDEAAIwxAACMMQAAjDEAAI/xAACP8QAAjDEAAIwx
        AACMMQAA//8AAA==
</value>
  </data>
</root>
//Program.cs ****************************************************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ITMO.CSCourses2020.Syatc00M.Lab02.Ex6.BiblWorm
{
    static class Program
    {
        /// <summary>
        /// Главная точка входа для приложения.
        /// </summary>
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());
        }
    }
}

//-----Form1***********************************************
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

using MyClass;

namespace ITMO.CSCourses2020.Syatc00M.Lab02.Ex6.BiblWorm
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            //List<Item> its = new List<Item>();
        }

        List<Item> its = new List<Item>();

        public string Author //Author
        {
            get { return textBox1.Text; }
            set { textBox1.Text = value; }

        }
        public string Title //Название
        {
            get { return textBox2.Text; }
            set { textBox2.Text = value; }

        }
        public string PublishHouse //Издательство
        {
            get { return textBox3.Text; }
            set { textBox3.Text = value; }

        }
        public int Page
        {
            get { return (int)numericUpDown1.Value; }
            set { numericUpDown1.Value = value; }

        }
        public int Year
        {
            get { return (int)numericUpDown2.Value; }
            set { numericUpDown2.Value = value; }

        }
        public int InvNumber
        {
            get { return (int)numericUpDown3.Value; }
            set { numericUpDown3.Value = value; }
        }
        public bool Existence
        {
            get { return checkBox1.Checked; }
            set { checkBox1.Checked = value; }
        }
        public bool SortInvNumber
        {
            get { return checkBox3.Checked; }
            set { checkBox3.Checked = value; }
        }
        public bool ReturnTime
        {
            get { return checkBox2.Checked; }
            set { checkBox2.Checked = value; }
        }
        public int PeriodUse
        {
            get { return (int)numericUpDown4.Value; }
            set { numericUpDown4.Value = value; }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Book b = new Book(Author, Title, PublishHouse,
                Page, Year, InvNumber, Existence);

            if (ReturnTime)
                b.ReturnSrok();
            b.PriceBook(PeriodUse);
            its.Add(b);

            Author = Title = PublishHouse = "";
            Page = InvNumber = PeriodUse = 0;
            Year = 2000;
            Existence = ReturnTime = false;

        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (SortInvNumber)
                its.Sort();
            StringBuilder sb = new StringBuilder();
            foreach (Item item in its)
            {
                sb.Append("\n" + item.ToString());
            }
            richTextBox1.Text = sb.ToString();
        }

    }
}

//------Book.cs--------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MyClass
{
    class Book : Item
    {
        private String author;
        private String title;
        private String publisher;
        private int pages;
        private int year;

        private double cust;
        private bool returnSrok;

        private static double price = 9;
        
        static Book()       //статический конструктор
        {
            price = 100;
        }

        public Book(String author, String title, String publisher, int pages, int year)
        {
            this.author = author;
            this.title = title;
            this.publisher = publisher;
            this.pages = pages;
            this.year = year;
        }

        public Book(String author, String title, String publisher, int pages, int year, long invNumber, bool taken) : base (invNumber, taken)
        {
            this.author = author;
            this.title = title;
            this.publisher = publisher;
            this.pages = pages;
            this.year = year;
        }

        public Book(String author, String title)
        {
            this.author = author;
            this.title = title;
        }

        public Book()
        { }


        public static void SetPrice(double price)
        {
            Book.price = price;
        }

        public override string ToString()
        {
            if (this.IsAvailable())
            return "\nКнига:\n Автор: " + author +"\n Название: " + title +
            "\n Год издания: " + year + "., " + pages + " стр. \n Стоимость аренды: " + Book.price + " p.\n" + base.ToString()
            + "\nИтого за чтение: " + cust + " p.";
            else
                return "\nКнига:\n Автор: " + author +"\n Название: " + title +
            "\n Год издания: " + year + "., " + pages + " стр. \n Стоимость аренды: " + Book.price + " p.\n" + base.ToString();

        }

        public void PriceBook(int s)
        {

            if (this.returnSrok == true)
                this.cust = s * price;
            else this.cust = s * (price + price * 0.13); ;
            
        }

        public void ReturnSrok()
        {
            returnSrok = true;
        }

        public override void Return()    // операция "вернуть"
        {
            if (returnSrok == true)
                taken = true;
            else
                taken = false;
        }

    }
}
//----IPubs.cs--------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MyClass
{
    interface IPubs
    {
        void Subs();
        bool IfSubs { get; set;}
  
    }
}
//------------Item.cs-----------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MyClass
{
    abstract class Item : IComparable
    {
        protected long invNumber; // инвентарный номер — целое число
        protected bool taken;    // хранит состояние объекта - взят ли на руки

        public Item(long invNumber, bool taken)
        {
            this.invNumber = invNumber;
            this.taken = taken;
        }

        public Item()
        {
            this.taken = true;
        }
           
       public bool IsAvailable()    // истина, если этот предмет имеется в библиотеке
          {
              if (taken == true)
                  return true;
              else
                  return false;
          }

       public long GetInvNumber()   // инвентарный номер  
          {
              return invNumber;
          }

       private void Take()      // операция "взять"
            {
                taken = false;
            }

      abstract public  void Return();    // операция "вернуть"
           //{
           //   // taken = true;
           //}

       public void TakeItem()
       {
           if (this.IsAvailable())
               this.Take();
       }

       public override string ToString()
       {
           if (taken)
           return "Состояние хранения: Инвентарный номер: " + invNumber + ". В наличии";
           else
               return "Состояние хранения: Инвентарный номер: " + invNumber + ". Нет в наличии";
       }

       int IComparable.CompareTo(object obj)
       {
           Item it = (Item)obj;
           if (this.invNumber == it.invNumber) return 0;
           else if (this.invNumber > it.invNumber) return 1;
           else return -1;
       }

    }
}
